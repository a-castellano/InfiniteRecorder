#!/bin/bash -
#===============================================================================
#
#          FILE: windmaker-infiniterecorder-video-manager
#
#         USAGE: Manage infinite recorder videos
#
#   DESCRIPTION:
#
#       OPTIONS: ---
#  REQUIREMENTS: ---
#          BUGS: ---
#         NOTES: ---
#        AUTHOR: √Ålvaro Castellano Vela (alvaro.castellano.vela@gmail.com),
#       CREATED: 06/07/2022 08:06
#      REVISION:  ---
#===============================================================================

source lib/01-log.sh
source lib/02-variable-management.sh
source lib/07-ffmpeg.sh

###################
###     Main    ###
###################

SCRIPT_NAME="Windmaker InfiniteRecorder Video Manager"

if [ ! -f /etc/default/windmaker-infiniterecorder ]; then
	write_log "/etc/default/windmaker-infiniterecorder does not exist, aborting script."
	exit 1
else

	source /etc/default/windmaker-infiniterecorder

	# Check Variables
	declare -a required_variables
	required_variables=(
		'recording-folder'
		'raw-video-delete-time'
		'merged-video-delete-time'
		'reduced-video-delete-time'
		'merge-video-files'
	)

	abort_script=false

	# Check Required variables

	for var in ${required_variables[@]}; do
		variable=$(echo ${var} | tr '[:lower:]' '[:upper:]' | tr '-' '_')
		check_required_variable ${variable}
		defined_variable=$?
		if [[ "X${defined_variable}X" == "X0X" ]]; then
			abort_script=true
		fi
	done

	if [[ "${abort_script}" = true ]]; then
		write_log "Aborting execucion"
		exit 1
	fi

	write_log "Deleting raw videos older than required time"

	find ${RECORDING_FOLDER} -type f -iwholename "*reduced/*.mp4" -cmin +${REDUCED_VIDEO_DELETE_TIME} -delete
	find ${RECORDING_FOLDER} -type f -iwholename "*merged/*.mp4" -cmin +${MERGED_VIDEO_DELETE_TIME} -delete
	find ${RECORDING_FOLDER} -type f -iwholename "*raw/*.mp4" -cmin +${RAW_VIDEO_DELETE_TIME} -delete

	write_log "Listing instances"
	instances=$(ls -ld ${RECORDING_FOLDER}/* | awk '{print $9}')
	FILE_LIST_LIMIT=$((${MERGE_VIDEO_FILES} + 1))
	while true; do

		write_log "Lauching combine and reduce jobs in parallel"
		declare -a combine_and_reduce_jobs

		for instance in ${instances}; do
			write_log "Ensure that ${instance}/merged exists"
			mkdir -p ${instance}/merged
			write_log "Ensure that ${instance}/reduces exists"
			mkdir -p ${instance}/reduced
			combine_and_reduce_videos "${instance}" &
			combine_and_reduce_job=$!
			combine_and_reduce_jobs+=(${combine_and_reduce_job})
		done
		write_log "Waiting from combine and reduce jobs to finnish"
		for combine_and_reduce_job in ${combine_and_reduce_jobs[@]}; do
			wait ${combine_and_reduce_job}
		done
		sleep 10
	done

fi
