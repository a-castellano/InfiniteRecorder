#!/bin/bash -
#===============================================================================
#
#          FILE: windmaker-infiniterecorder-video-manager
#
#         USAGE: Manage infinite recorder videos
#
#   DESCRIPTION:
#
#       OPTIONS: ---
#  REQUIREMENTS: ---
#          BUGS: ---
#         NOTES: ---
#        AUTHOR: √Ålvaro Castellano Vela (alvaro.castellano.vela@gmail.com),
#       CREATED: 06/07/2022 08:06
#      REVISION:  ---
#===============================================================================

source lib/01-log.sh
source lib/02-variable-management.sh

###################
###     Main    ###
###################

SCRIPT_NAME="Windmaker InfiniteRecorder Video Manager"

if [ ! -f /etc/default/windmaker-infiniterecorder ]; then
	write_log "/etc/default/windmaker-infiniterecorder does not exist, aborting script."
	exit 1
else

	source /etc/default/windmaker-infiniterecorder

	# Check Variables
	declare -a required_variables
	required_variables=(
		'recording-folder'
		'raw-video-delete-time'
		'merge-video-files'
	)

	abort_script=false

	# Check Required variables

	for var in ${required_variables[@]}; do
		variable=$(echo ${var} | tr '[:lower:]' '[:upper:]' | tr '-' '_')
		check_required_variable ${variable}
		defined_variable=$?
		if [[ "X${defined_variable}X" == "X0X" ]]; then
			abort_script=true
		fi
	done

  if [[ "${abort_script}" = true ]]; then
  	write_log "Aborting execucion"
  	exit 1
  fi

	write_log "Deleting raw videos older than required time"

	find ${RECORDING_FOLDER} -type f -iwholename "*raw/*.mp4" -cmin +${RAW_VIDEO_DELETE_TIME} -delete


write_log "Listing instances"
instances=$(ls -ld ${RECORDING_FOLDER}/* | awk '{print $9}')
file_list_limit=$((${MERGE_VIDEO_FILES} + 1))
for instance in ${instances}; do
	echo "instance ${instance}"
	mkdir -p ${instance}/merged
	mkdir -p ${instance}/reduced
if [ -f "${instance}/last_merge" ]; then
	echo "Exists"
else
	echo "file_list_limit ${file_list_limit}"
	available_files=$(ls -lrt ${instance}/raw/*.mp4 | awk '{print $9}' | head -n ${file_list_limit} | wc -l)
	echo "available_files ${available_files}"
	if [[ "X${available_files}X" == "X${file_list_limit}X" ]]; then
		readarray -t files_to_merge < <(ls -lrt ${instance}/raw/*.mp4 | awk '{print $9}' | head -n ${MERGE_VIDEO_FILES})
		echo "${files_to_merge[@]}"
		echo "__________"
		merged_file_name=$(basename "${files_to_merge[0]}")
		last_video_date=$(stat -c %Y "${files_to_merge[-1]}")
		write_log "Merging video selection"
		videos_to_merge_file=$(mktemp)
		printf "file %s\n" "${files_to_merge[@]}" > ${videos_to_merge_file}
		cat ${videos_to_merge_file}
		ffmpeg -f concat -safe 0 -i ${videos_to_merge_file} -c copy "${instance}/merged/${merged_file_name}"
		rm -f ${videos_to_merge_file}
	else
		write_log "Not enough files to combine"

	fi
fi
done

fi
